{
	"info": {
		"_postman_id": "6ee086de-e5bb-4f29-b2cf-ab9832508ba6",
		"name": "Test Smarter API",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json",
		"_exporter_id": "27673975"
	},
	"item": [
		{
			"name": "[200] Create successfully",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"",
							"pm.test('Check status login successfully with valid account', function (){",
							"     pm.response.to.have.status(200);",
							"})",
							"",
							"pm.test('Check data response when login successfully with valid account', function (){",
							"    pm.response.json('id','4');",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\":\"eve.holt@reqres.in\",\n    \"password\": \"pistol\"\n}"
				},
				"url": "https://reqres.in/api/register"
			},
			"response": [
				{
					"name": "[200] Create successfully",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\":\"eve.holt@reqres.in\",\n    \"password\": \"pistol\"\n}"
						},
						"url": "https://8ec7eba5-792d-4561-9651-3740b7f84bb5.mock.pstmn.io/api/register"
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Date",
							"value": "Thu, 22 Aug 2024 03:57:28 GMT"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "49"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "x-srv-trace",
							"value": "v=1;t=20e14a323e91a326"
						},
						{
							"key": "x-srv-span",
							"value": "v=1;s=3b1c1fe52e741e17"
						},
						{
							"key": "Access-Control-Allow-Origin",
							"value": "*"
						},
						{
							"key": "X-RateLimit-Limit",
							"value": "120"
						},
						{
							"key": "X-RateLimit-Remaining",
							"value": "117"
						},
						{
							"key": "X-RateLimit-Reset",
							"value": "1724299088"
						},
						{
							"key": "Report-To",
							"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1724298836&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=rgrLLrG4GTy80fHI6JbbZN74r8%2F1EhJkbDhP4HJ0nPA%3D\"}]}"
						},
						{
							"key": "Reporting-Endpoints",
							"value": "heroku-nel=https://nel.heroku.com/reports?ts=1724298836&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=rgrLLrG4GTy80fHI6JbbZN74r8%2F1EhJkbDhP4HJ0nPA%3D"
						},
						{
							"key": "Nel",
							"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
						},
						{
							"key": "X-Powered-By",
							"value": "Express"
						},
						{
							"key": "Etag",
							"value": "W/\"24-4iP0za1geN2he+ohu8F0FhCjLks\""
						},
						{
							"key": "Via",
							"value": "1.1 vegur"
						},
						{
							"key": "CF-Cache-Status",
							"value": "DYNAMIC"
						},
						{
							"key": "Server",
							"value": "cloudflare"
						},
						{
							"key": "CF-RAY",
							"value": "8b6feb2fde72461f-SIN"
						},
						{
							"key": "Vary",
							"value": "Accept-Encoding"
						}
					],
					"cookie": [],
					"body": "{\n    \"id\": 4,\n    \"token\": \"QpwL5tke4Pnpja7X4\",\n    \"message\" : \"This is response from Mock server\"\n}"
				}
			]
		},
		{
			"name": "[400] Login failed with empty password",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"",
							"pm.test('Check status login failed with empty password', function (){",
							"     pm.response.to.have.status(400);",
							"})",
							"",
							"pm.test('Check data response when login failed with empty password', function (){",
							"    let errorMessage=\"Missing password\";",
							"    pm.response.json('error',errorMessage);",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\":\"eve.holt@reqres.in\",\n    \"password\": \"\"\n}"
				},
				"url": "https://reqres.in/api/register"
			},
			"response": [
				{
					"name": "[400] Login failed with empty password",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\":\"eve.holt@reqres.in\",\n    \"password\": \"123\"\n}"
						},
						"url": "https://reqres.in/api/register"
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Date",
							"value": "Thu, 22 Aug 2024 04:08:15 GMT"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "36"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Report-To",
							"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1724299695&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=41X%2FcpLAJUSkHbC7qDw%2F3hGOVHC%2FSWGj54kj8oArMnM%3D\"}]}"
						},
						{
							"key": "Reporting-Endpoints",
							"value": "heroku-nel=https://nel.heroku.com/reports?ts=1724299695&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=41X%2FcpLAJUSkHbC7qDw%2F3hGOVHC%2FSWGj54kj8oArMnM%3D"
						},
						{
							"key": "Nel",
							"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
						},
						{
							"key": "X-Powered-By",
							"value": "Express"
						},
						{
							"key": "Access-Control-Allow-Origin",
							"value": "*"
						},
						{
							"key": "Etag",
							"value": "W/\"24-4iP0za1geN2he+ohu8F0FhCjLks\""
						},
						{
							"key": "Via",
							"value": "1.1 vegur"
						},
						{
							"key": "CF-Cache-Status",
							"value": "DYNAMIC"
						},
						{
							"key": "Server",
							"value": "cloudflare"
						},
						{
							"key": "CF-RAY",
							"value": "8b700026bfbe6ba2-SIN"
						}
					],
					"cookie": [],
					"body": "{\n    \"messsage\": \"Login failed\",\n    \"errorCode\" : 400 \n}"
				}
			]
		},
		{
			"name": "[400] Login failed with wrong email",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"",
							"pm.test('Check status login failed with wrong email', function (){",
							"     pm.response.to.have.status(400);",
							"})",
							"",
							"pm.test('Check data response when login failed with wrong email', function (){",
							"    let errorMessage=\"Note: Only defined users succeed registration\";",
							"    pm.response.json('error',errorMessage);",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\":\"eve.holt123@reqres.in\",\n    \"password\": \"pistol\"\n}"
				},
				"url": "https://reqres.in/api/register"
			},
			"response": [
				{
					"name": "[400] Login failed with wrong email",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\":\"eve.holt123@reqres.in\",\n    \"password\": \"pistol\"\n}"
						},
						"url": "https://reqres.in/api/register"
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Date",
							"value": "Thu, 22 Aug 2024 04:11:19 GMT"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "57"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Report-To",
							"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1724299879&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=NaKbLUq6YNGkIsXOrUbVnNEhLAuFrBn2Y8HsUdPGfWo%3D\"}]}"
						},
						{
							"key": "Reporting-Endpoints",
							"value": "heroku-nel=https://nel.heroku.com/reports?ts=1724299879&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=NaKbLUq6YNGkIsXOrUbVnNEhLAuFrBn2Y8HsUdPGfWo%3D"
						},
						{
							"key": "Nel",
							"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
						},
						{
							"key": "X-Powered-By",
							"value": "Express"
						},
						{
							"key": "Access-Control-Allow-Origin",
							"value": "*"
						},
						{
							"key": "Etag",
							"value": "W/\"39-6jrJxn+7f+pQUhbPgNMst7tagpA\""
						},
						{
							"key": "Via",
							"value": "1.1 vegur"
						},
						{
							"key": "CF-Cache-Status",
							"value": "DYNAMIC"
						},
						{
							"key": "Server",
							"value": "cloudflare"
						},
						{
							"key": "CF-RAY",
							"value": "8b7004a2c8a96ba2-SIN"
						}
					],
					"cookie": [],
					"body": "{\n    \"error\": \"Invalid email\",\n    \"errCode\" : 400 \n}"
				}
			]
		},
		{
			"name": "Data Driven API",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const dataResponse=pm.response.json();",
							"",
							"pm.test(`${pm.variables.get(\"messageTestCase\")} email: [${pm.variables.get(\"email\")}]| password: [${pm.variables.get(\"password\")}]`, () =>{",
							"    pm.response.to.have.status(pm.variables.get(\"statusCode\"));",
							"})",
							"",
							"pm.test(`Status code of api is :  ${pm.variables.get(\"statusCode\")}`,()=>{",
							"    pm.response.to.have.status(pm.variables.get(\"statusCode\"));",
							"})",
							"if(pm.variables.get(\"statusCode\")!=200){",
							"    pm.test(`Message of system is : \"${pm.variables.get(\"responseText\")}\"`, ()=>{",
							"        pm.response.to.have.status(pm.variables.get(\"statusCode\"));",
							"    })",
							"}else{",
							"    pm.test(`This is a random token : ${pm.variables.get(\"responseText\")}`, ()=>{",
							"        pm.response.to.have.status(pm.variables.get(\"statusCode\"));",
							"    })",
							"}",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"const loginData=pm.iterationData.get(\"loginData\");",
							"const responseData=pm.iterationData.get(\"responseData\");",
							"const dataEmail=loginData.email;",
							"const dataPassword=loginData.password;",
							"const statusCode=responseData.statusCode;",
							"const messageTestCase=responseData.messageTestCase;",
							"const responseText=responseData.responseText;",
							"pm.variables.set(\"email\",dataEmail);",
							"pm.variables.set(\"password\",dataPassword);",
							"pm.variables.set(\"statusCode\",statusCode);",
							"pm.variables.set(\"messageTestCase\",messageTestCase);",
							"pm.variables.set(\"responseText\",responseText);",
							"const payload = JSON.stringify({",
							"    email : dataEmail, ",
							"    password : dataPassword,",
							"})",
							"",
							"pm.variables.set(\"body\",payload);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "\n    {{body}}\n"
				},
				"url": "https://reqres.in/api/register"
			},
			"response": []
		}
	]
}